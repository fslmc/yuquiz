// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  sslmode = require
}

model User {
  id       String      @id @default(uuid()) @map("id")
  email    String      @unique
  hashedPw String      @map("hashed_pw")
  name     String?
  quizzes  Quiz[]
  sessions Session[]
  attempts QuizAttempt[]

  @@map("USERS")
}

model Quiz {
  id        String     @id @default(uuid()) @map("id")
  title     String
  desc      String?    @map("description")
  authorId  String     @map("author_id")
  createdAt DateTime   @default(now()) @map("created_at")
  author    User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  questions Question[]
  attempts  QuizAttempt[]

  @@map("QUIZZES")
}

model QuestionType {
  id          String     @id @default(uuid()) @map("id")
  code        String     @unique
  description String?
  questions   Question[]

  @@map("QUESTION_TYPES")
}

model Question {
  id             String         @id @default(uuid()) @map("id")
  quizId         String         @map("quiz_id")
  questionTypeId String         @map("question_type_id")
  text           String
  sequence       Int
  points         Float
  quiz           Quiz           @relation(fields: [quizId], references: [id], onDelete: Cascade)
  questionType   QuestionType   @relation(fields: [questionTypeId], references: [id], onDelete: Restrict)
  answerOptions  AnswerOption[]
  responses      QuestionResponse[]

  @@map("QUESTIONS")
}

model AnswerOption {
  id         String             @id @default(uuid()) @map("id")
  questionId String             @map("question_id")
  optionText String             @map("option_text")
  sequence   Int
  isCorrect  Boolean            @map("is_correct") @default(false)
  question   Question           @relation(fields: [questionId], references: [id], onDelete: Cascade)
  responses  QuestionResponse[]

  @@map("ANSWER_OPTIONS")
}

model Session {
  id           String        @id @default(uuid()) @map("id")
  userId       String        @map("user_id")
  sessionToken String        @unique @map("session_token")
  expires      DateTime
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  attempts     QuizAttempt[]

  @@map("SESSIONS")
}

model QuizAttempt {
  id         String               @id @default(uuid()) @map("id")
  userId     String               @map("user_id")
  quizId     String               @map("quiz_id")
  sessionId  String               @map("session_id")
  startedAt  DateTime             @default(now()) @map("started_at")
  finishedAt DateTime?            @map("finished_at")
  score      Float?
  user       User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  quiz       Quiz                 @relation(fields: [quizId], references: [id], onDelete: Cascade)
  session    Session              @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  responses  QuestionResponse[]

  @@map("QUIZ_ATTEMPTS")
}

model QuestionResponse {
  id               String         @id @default(uuid()) @map("id")
  attemptId        String         @map("attempt_id")
  questionId       String         @map("question_id")
  selectedOptionId String?        @map("selected_option_id")
  textAnswer       String?        @map("text_answer")
  isCorrect        Boolean?       @map("is_correct")
  answeredAt       DateTime       @default(now()) @map("answered_at")
  attempt          QuizAttempt    @relation(fields: [attemptId], references: [id], onDelete: Cascade)
  question         Question       @relation(fields: [questionId], references: [id], onDelete: Cascade)
  selectedOption   AnswerOption?  @relation(fields: [selectedOptionId], references: [id], onDelete: SetNull)

  @@map("QUESTION_RESPONSES")
}